trigger:
- none

variables:
  pool: integrant_pool
  web_api: 'https://api-proj.azurewebsites.net/'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildSite
        displayName: Build Site
        pool: $(pool)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - script: |
              cd frontend-app
              npm install
              npm run build
            env:
            # test without CI
             # CI: true
              REACT_APP_WEB_API: '$(web_api)'
            displayName: 'npm install and build'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/frontend-app/build/'
              Contents: |
                $(System.DefaultWorkingDirectory)/frontend-app/build/**/*
              TargetFolder: '$(Build.ArtifactStagingDirectory)/output-site'
            displayName: 'Copy site files to artifact directory'
          
          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/output-site'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-Site.zip
              replaceExistingArchive: true
              verbose: true

          - task: PublishPipelineArtifact@0
            displayName: 'Publish site pipeline artifacts'
            inputs:
              artifactName: "$(Build.BuildId)-Site"
              targetPath: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-Site.zip


  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploySite
        displayName: Deploy Site Production
        environment: 'production'
        pool: $(pool)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@1
                  displayName: 'Download Pipeline Artifacts'
                  inputs:
                    artifactName: "$(Build.BuildId)-Site"
                    buildType: 'current'

                - task: ExtractFiles@1
                  inputs:
                    archiveFilePatterns: '$(System.ArtifactsDirectory)/$(Build.BuildId)-Site.zip'
                    destinationFolder: '$(System.DefaultWorkingDirectory)/unzip/$(Build.BuildId)-Site'
                    cleanDestinationFolder: true

                - task: AzureStaticWebApp@0
                  inputs:
                    app_location: "/"
                    skip_app_build: true
                    output_location: "build"
                    workingDirectory: "$(System.DefaultWorkingDirectory)/unzip/$(Build.BuildId)-Site" 
                  env:
                    azure_static_web_apps_api_token: $(deployment_token)