apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chronograf-ing
  namespace: tick
  annotations:
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: kong
    konghq.com/strip-path: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:

  - host: chrono.aam.localhost
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: tick-chronograf
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ing
  namespace: argocd
  annotations:
    # ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    kubernetes.io/ingress.class: kong
    # konghq.com/strip-path: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:

  - host: argo.aam.localhost
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: argocd-server
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: influxdb-ing
  namespace: tick
  annotations:
    # ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    kubernetes.io/ingress.class: kong
    # konghq.com/strip-path: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:

  - host: influxdb.aam.localhost
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: tick-influxdb
            port:
              number: 8086